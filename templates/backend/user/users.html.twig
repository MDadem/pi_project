<!DOCTYPE html>
<html lang="en">

{% block stylesheets %}
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Bootstrap User Management Data Table</title>
    <!-- Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round|Heebo:wght@400;500;600;700&display=swap">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <!-- Bootstrap and Font Awesome -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css">
    <!-- Custom CSS -->
    <link href="{{ asset('css/backoffice-style.css') }}" rel="stylesheet">
    <link href="{{ asset('css/users.css') }}" rel="stylesheet">
    <link href="{{ asset('css/bootstrap-backoffice.min.css') }}" rel="stylesheet">
    <!-- Libraries -->
    <link href="{{ asset('lib/owlcarousel/assets/owl.carousel.min.css') }}" rel="stylesheet">
    <link href="{{ asset('lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css') }}" rel="stylesheet">
    <!-- Favicon -->
    <link href="{{ asset('img/favicon.ico') }}" rel="icon">
    <style>
        .save {
            color: green;
            cursor: pointer;
        }
        .save:hover {
            color: darkgreen;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container-fluid position-relative bg-white d-flex p-0">
        <!-- Spinner Start -->
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <!-- Spinner End -->
        {% include 'backend/sidebar/sidebar.html.twig' %}
        <div class="content">
            {% include 'backend/navbar/navbar.html.twig' %}
            {% for label, messages in app.flashes %}
                <div class="alert alert-{{ label }}">
                    {% for message in messages %}
                        <p>{{ message }}</p>
                    {% endfor %}
                </div>
            {% endfor %}
            <div class="container-xl">
                <div class="table-responsive">
                    <div class="table-wrapper">
                        <div class="table-title">
                            <div class="row">
                                <div class="col-sm-5">
                                    <h2>User <b>Management</b></h2>
                                </div>
                                <div class="col-sm-7">
                                    <a href="#" class="add-new btn btn-secondary"><i class="material-icons">&#xE147;</i> <span>Add New User</span></a>

                                    <a href="{{ path('app_export_users_excel') }}" class="btn btn-secondary">
                                        <i class="material-icons">&#xE24D;</i>
                                        <span>Export to Excel</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <table class="table table-striped table-hover">
                            <thead>
                            <tr>
                                <th>#</th>
                                <th>Name & Last-Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for user in users %}
                                <tr>
                                    <td>{{ loop.index + ((currentPage - 1) * 10) }}</td>
                                    <td>
                                        <a href="#">
                                            <img src="{{ user.profileIMG ? asset(user.profileIMG) : asset('img/team-3.jpg') }}" class="avatar img-fluid" alt="Avatar" style="width: 40px; height: 40px; border-radius: 50%;">
                                            <span class="editable" data-field="firstName">{{ user.firstName }}</span>
                                            <span class="editable" data-field="lastName">{{ user.lastName }}</span>
                                        </a>
                                    </td>
                                    <td><span class="editable" data-field="email">{{ user.email }}</span></td>
                                    <td>
                                        <span class="editable" data-field="role">
                                            {% for role in user.roles %}
                                                {% if role == 'ROLE_ADMIN' %}
                                                    Admin
                                                {% elseif role == 'ROLE_STUDENT' %}
                                                    Student
                                                {% else %}
                                                    {{ role }}
                                                {% endif %}
                                                {% if not loop.last %}, {% endif %}
                                            {% endfor %}
                                        </span>
                                    </td>
                                    <td>
                                        <span class="status text-{{ user.isBlocked ? 'danger' : 'success' }}">&bull;</span>
                                        {{ user.isBlocked ? 'Blocked' : 'Active' }}
                                    </td>
                                    <td>
                                        <a href="#" class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons">&#xE8B8;</i></a>
                                        <a href="#" class="save" title="Save" data-toggle="tooltip" style="display: none;"><i class="material-icons">&#xE161;</i></a>
                                        <a href="#" class="delete" title="Delete" data-id="{{ user.id }}" data-toggle="modal" data-target="#deleteEmployeeModal">
                                            <i class="material-icons">&#xE5C9;</i>
                                        </a>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>

                        <!-- Pagination Controls -->
                        <nav>
                            <ul class="pagination justify-content-center">
                                {% if currentPage > 1 %}
                                    <li class="page-item"><a class="page-link" href="{{ path('app_dashboard_users', {'page': currentPage - 1}) }}">Previous</a></li>
                                {% endif %}
                                {% for i in 1..totalPages %}
                                    <li class="page-item {{ i == currentPage ? 'active' : '' }}">
                                        <a class="page-link" href="{{ path('app_dashboard_users', {'page': i}) }}">{{ i }}</a>
                                    </li>
                                {% endfor %}
                                {% if currentPage < totalPages %}
                                    <li class="page-item"><a class="page-link" href="{{ path('app_dashboard_users', {'page': currentPage + 1}) }}">Next</a></li>
                                {% endif %}
                            </ul>
                        </nav>
                        <div class="clearfix">
                            <div class="hint-text">Showing <b>{{ users|length }}</b> entries</div>
                        </div>
                    </div>
                </div>
            </div>
            {% include 'backend/footer/footer.html.twig' %}
        </div>
        <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>
    <div id="deleteEmployeeModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="#" method="POST" id="deleteForm">
                    <div class="modal-header">
                        <h4 class="modal-title">Delete User</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete the user?</p>
                        <p class="text-warning"><small>This action cannot be undone.</small></p>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-default" data-dismiss="modal" value="Cancel">
                        <input type="submit" class="btn btn-danger" value="Delete">
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <!-- jQuery and Bootstrap -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Libraries -->
    <script src="{{ asset('lib/chart/chart.min.js') }}"></script>
    <script src="{{ asset('lib/easing/easing.min.js') }}"></script>
    <script src="{{ asset('lib/waypoints/waypoints.min.js') }}"></script>
    <script src="{{ asset('lib/owlcarousel/owl.carousel.min.js') }}"></script>
    <script src="{{ asset('lib/tempusdominus/js/moment.min.js') }}"></script>
    <script src="{{ asset('lib/tempusdominus/js/moment-timezone.min.js') }}"></script>
    <script src="{{ asset('lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js') }}"></script>
    <!-- Custom JS -->
    <script src="{{ asset('js/backoffice-main.js') }}"></script>
    <!-- Tooltip Initialization -->
    <script>

    $(document).ready(function() {
        // Initialize tooltips
        $('[data-toggle="tooltip"]').tooltip();

        // Handle delete button click
        $('.delete').on('click', function() {
            var userId = $(this).data('id'); // Get user ID
            $('#deleteForm').attr('action', '{{ path("app_delete_user", {"id": "USER_ID"}) }}'.replace('USER_ID', userId));
        });

        // Handle edit button click
        $(document).on("click", ".edit", function(e) {
            e.preventDefault();

            var row = $(this).closest("tr");

            // Convert editable fields into input fields
            row.find(".editable").each(function() {
                var cellText = $(this).text().trim();
                var fieldName = $(this).data("field");

                // Handle role as dropdown
                if (fieldName === "role") {
                    var roleOptions = {
                        "Admin": "ROLE_ADMIN",
                        "Student": "ROLE_STUDENT"
                    };
                    var selectHtml = '<select class="form-control edit-input">';
                    for (var roleLabel in roleOptions) {
                        var roleValue = roleOptions[roleLabel];
                        var selected = (cellText.indexOf(roleLabel) !== -1) ? 'selected' : '';
                        selectHtml += `<option value="${roleValue}" ${selected}>${roleLabel}</option>`;
                    }
                    selectHtml += '</select>';
                    $(this).html(selectHtml);
                } else {
                    $(this).html(`<input type="text" class="form-control edit-input" value="${cellText}" data-field="${fieldName}">`);
                }
            });

            // Toggle edit and save buttons
            row.find(".edit").hide();
            row.find(".save").show();
        });

        // Handle save button click
        $(document).on("click", ".save", function(e) {
            e.preventDefault();

            var row = $(this).closest("tr");
            var userId = row.find(".delete").data("id"); // Retrieve user ID from delete button

            if (!userId) {
                alert("User ID not found!");
                return;
            }

            var updatedData = {
                id: userId,
                firstName: row.find(".editable[data-field='firstName'] input").val().trim(),
                lastName: row.find(".editable[data-field='lastName'] input").val().trim(),
                email: row.find(".editable[data-field='email'] input").val().trim(),
                roles: [row.find(".editable[data-field='role'] select").val()]
            };

            console.log("User ID being sent:", userId);
            console.log("Updated Data:", updatedData);

            // Send AJAX request to save changes
            $.ajax({
                url: '{{ path("app_update_user") }}',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(updatedData),
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('X-CSRF-Token', '{{ csrf_token("update_user") }}');
                },
                success: function(response) {
                    alert('User updated successfully!');
                    location.reload();
                },
                error: function(xhr) {
                    alert('Error updating user: ' + xhr.responseJSON.message);
                }
            });
        });

        /*** 🚀 NEW FUNCTIONALITY: ADD USER 🚀 ***/

        // Add new user row when "Add New User" button is clicked
        $(".add-new").click(function() {
            $(this).attr("disabled", "disabled");

            var index = $("table tbody tr:last-child").index();
            var newRow = `<tr class="new-user-row">
            <td></td>
            <td>
                <input type="text" class="form-control new-input" name="firstName" placeholder="First Name">
                <input type="text" class="form-control new-input" name="lastName" placeholder="Last Name">
            </td>
            <td><input type="email" class="form-control new-input" name="email" placeholder="Email"></td>
            <td>
                <select class="form-control new-input" name="role">
                    <option value="ROLE_ADMIN">Admin</option>
                    <option value="ROLE_STUDENT">Student</option>
                </select>
            </td>
            <td><span class="status text-success">&bull; Active</span></td>
            <td>
                <a href="#" class="add" title="Save" data-toggle="tooltip"><i class="material-icons">&#xE161;</i></a>
                <a href="#" class="delete-new" title="Cancel" data-toggle="tooltip"><i class="material-icons">&#xE5C9;</i></a>
            </td>
        </tr>`;

            $("table tbody").append(newRow);
            $('[data-toggle="tooltip"]').tooltip();
        });

        // Handle saving the new user
        $(document).on("click", ".add", function() {
            var row = $(this).closest("tr");
            var newUserData = {
                firstName: row.find("input[name='firstName']").val().trim(),
                lastName: row.find("input[name='lastName']").val().trim(),
                email: row.find("input[name='email']").val().trim(),
                roles: [row.find("select[name='role']").val()]
            };

            if (!newUserData.firstName || !newUserData.lastName || !newUserData.email) {
                alert("All fields are required.");
                return;
            }

            $.ajax({
                url: '{{ path("app_add_user") }}',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(newUserData),
                beforeSend: function(xhr) {
                    xhr.setRequestHeader('X-CSRF-Token', '{{ csrf_token("add_user") }}');
                },
                success: function(response) {
                    alert('User added successfully!');
                    location.reload();
                },
                error: function(xhr) {
                    alert('Error adding user: ' + xhr.responseJSON.message);
                }
            });
        });

        // Remove row if user cancels adding a new user
        $(document).on("click", ".delete-new", function() {
            $(this).closest("tr").remove();
            $(".add-new").removeAttr("disabled");
        });

    });
    {#$(document).ready(function() {#}
    {#    // Initialize tooltips#}
    {#    $('[data-toggle="tooltip"]').tooltip();#}

    {#    // Handle delete button click#}
    {#    $('.delete').on('click', function() {#}
    {#        var userId = $(this).data('id'); // Get user ID#}
    {#        $('#deleteForm').attr('action', '{{ path("app_delete_user", {"id": "USER_ID"}) }}'.replace('USER_ID', userId));#}
    {#    });#}

    {#    // Handle edit button click#}
    {#    $(document).on("click", ".edit", function(e) {#}
    {#        e.preventDefault();#}

    {#        var row = $(this).closest("tr");#}

    {#        // Convert editable fields into input fields#}
    {#        row.find(".editable").each(function() {#}
    {#            var cellText = $(this).text().trim();#}
    {#            var fieldName = $(this).data("field");#}

    {#            // Handle role as dropdown#}
    {#            if (fieldName === "role") {#}
    {#                var roleOptions = {#}
    {#                    "Admin": "ROLE_ADMIN",#}
    {#                    "Student": "ROLE_STUDENT"#}
    {#                };#}
    {#                var selectHtml = '<select class="form-control edit-input">';#}
    {#                for (var roleLabel in roleOptions) {#}
    {#                    var roleValue = roleOptions[roleLabel];#}
    {#                    var selected = (cellText.indexOf(roleLabel) !== -1) ? 'selected' : '';#}
    {#                    selectHtml += `<option value="${roleValue}" ${selected}>${roleLabel}</option>`;#}
    {#                }#}
    {#                selectHtml += '</select>';#}
    {#                $(this).html(selectHtml);#}
    {#            } else {#}
    {#                $(this).html(`<input type="text" class="form-control edit-input" value="${cellText}" data-field="${fieldName}">`);#}
    {#            }#}
    {#        });#}

    {#        // Toggle edit and save buttons#}
    {#        row.find(".edit").hide();#}
    {#        row.find(".save").show();#}
    {#    });#}

    {#    // Handle save button click#}
    {#    $(document).on("click", ".save", function(e) {#}
    {#        e.preventDefault();#}

    {#        var row = $(this).closest("tr");#}
    {#        var userId = row.find(".delete").data("id"); // Retrieve user ID from delete button#}

    {#        if (!userId) {#}
    {#            alert("User ID not found!");#}
    {#            return;#}
    {#        }#}

    {#        var updatedData = {#}
    {#            id: userId,#}
    {#            firstName: row.find(".editable[data-field='firstName'] input").val().trim(),#}
    {#            lastName: row.find(".editable[data-field='lastName'] input").val().trim(),#}
    {#            email: row.find(".editable[data-field='email'] input").val().trim(),#}
    {#            roles: [row.find(".editable[data-field='role'] select").val()]#}
    {#        };#}

    {#        console.log("User ID being sent:", userId);#}
    {#        console.log("Updated Data:", updatedData);#}

    {#        // Send AJAX request to save changes#}
    {#        $.ajax({#}
    {#            url: '{{ path("app_update_user") }}',#}
    {#            method: 'POST',#}
    {#            contentType: 'application/json',#}
    {#            data: JSON.stringify(updatedData),#}
    {#            beforeSend: function(xhr) {#}
    {#                xhr.setRequestHeader('X-CSRF-Token', '{{ csrf_token("update_user") }}');#}
    {#            },#}
    {#            success: function(response) {#}
    {#                alert('User updated successfully!');#}
    {#                location.reload();#}
    {#            },#}
    {#            error: function(xhr) {#}
    {#                alert('Error updating user: ' + xhr.responseJSON.message);#}
    {#            }#}
    {#        });#}
    {#    });#}
    {#});#}

</script>

{% endblock %}

</html>